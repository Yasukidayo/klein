<Window x:Class="LivetApp1.Views.Help"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:LivetApp1.Views"
        xmlns:vm="clr-namespace:LivetApp1.ViewModels"
        Title="ヘルプ" Height="350" Width="525">

    <Window.DataContext>
        <vm:HelpViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="70*"/>
            <RowDefinition Height="249*"/>
        </Grid.RowDefinitions>
        <TextBlock Grid.Column="0"  FontSize="30" VerticalAlignment="Bottom" Background="#AFEEEE" Height="324" Margin="224,-2,-84,-3" RenderTransformOrigin="0.5,0.5" Grid.RowSpan="2">
            <TextBlock.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform AngleX="14.503"/>
                    <RotateTransform/>
                    <TranslateTransform X="21.242"/>
                </TransformGroup>
            </TextBlock.RenderTransform>
        </TextBlock>
        <TextBlock Grid.Column="0" Text="" FontWeight="Bold" Foreground="White" FontSize="20" Background="#FFB6C1" Margin="-80,-1,272,-3" RenderTransformOrigin="0.5,0.5" Grid.RowSpan="2">
            <TextBlock.RenderTransform>

                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform AngleX="14.472"/>
                    <RotateTransform/>
                    <TranslateTransform X="30.742"/>
                </TransformGroup>
            </TextBlock.RenderTransform>
        </TextBlock>

        <StackPanel Grid.RowSpan="2">
            <UniformGrid x:Name="uniformGrid1" Columns="2">
                <Button Content="戻る" Click="buttun1"   Height="21" Margin="0,0,136,0" />
            </UniformGrid>
            <TextBox Text="Q" />
            <TextBlock Text="A" />
            <TextBox Text="Q" />
            <TextBlock Text="A" />
            <TextBox Text="Q" />
            <TextBlock Text="A" />
            <TextBox Text="Q" />
            <TextBlock Text="A" />

        </StackPanel>
    </Grid>
</Window>
