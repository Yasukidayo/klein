<Window x:Class="LivetApp1.Views.Logon"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:vm="clr-namespace:LivetApp1.ViewModels"
        Title="ともよせストア" Height="300" Width="520">


    <Window.DataContext>
        <vm:LogonViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

        <!-- LogonViewModel からの TransitionMessage("Authorized") を受け取とってログオン画面を閉じる処理。 -->
        <l:InteractionMessageTrigger MessageKey="Authorized" Messenger="{Binding Messenger}">
            <l:WindowInteractionMessageAction/>
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger MessageKey="ShowLogon2" Messenger="{Binding Messenger}">
            <l:TransitionInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"/>
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger MessageKey="ShowNew" Messenger="{Binding Messenger}">
            <l:TransitionInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"/>
        </l:InteractionMessageTrigger>

    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="26*"/>
            <RowDefinition Height="111"/>
            <RowDefinition Height="14"/>
            <RowDefinition Height="71*"/>
        </Grid.RowDefinitions>
        <TextBlock Grid.Column="0"  FontSize="30" VerticalAlignment="Bottom" Background="#AFEEEE" Height="319" Grid.RowSpan="4" Margin="182,-1,-23,1" RenderTransformOrigin="0.5,0.5">
            <TextBlock.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform AngleX="14.503"/>
                    <RotateTransform/>
                    <TranslateTransform X="21.242"/>
                </TransformGroup>
            </TextBlock.RenderTransform>
        </TextBlock>
        <TextBlock Grid.Column="0" Text="" FontWeight="Bold" Foreground="White" FontSize="20" Background="#FFB6C1" Grid.RowSpan="4" Margin="-84,-1,283,1" RenderTransformOrigin="0.5,0.5">
            <TextBlock.RenderTransform>

                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform AngleX="14.472"/>
                    <RotateTransform/>
                    <TranslateTransform X="30.742"/>
                </TransformGroup>
            </TextBlock.RenderTransform>
        </TextBlock>

       
        <StackPanel>
            <Canvas>
                <TextBlock Canvas.Left="95" Canvas.Top="63" Height="22" Width="70"   Text="Name" />
                <TextBox  Canvas.Left="160" Canvas.Top="60" Height="20" Width="200"   Text="{Binding User.Name}"/>

                    <TextBlock Height="22" Width="70" Text="Password" Canvas.Left="95" Canvas.Top="93"/>


                <PasswordBox Height="20" Width="200"  Canvas.Left="160" Canvas.Top="90" 
                             InputMethod.PreferredImeState="On" InputMethod.PreferredImeConversionMode="Alphanumeric">
                    <i:Interaction.Behaviors>
                        <l:PasswordBoxBindingSupportBehavior Password="{Binding User.Password}" />
                    </i:Interaction.Behaviors>
                </PasswordBox>

                <Button Height="22" Width="100" Canvas.Left="210" Canvas.Top="140"
                        Command="{Binding LogonCommand}" Content="Login"/>
                <Button Content="感謝カードを作る" Height="32" Width="160" Canvas.Left="180" Canvas.Top="180" 
                        Command="{Binding ShowNewCommand}" Click="Button_Click_1"/>
            </Canvas>
        </StackPanel>
        <StackPanel HorizontalAlignment="Right" Grid.RowSpan="4" Width="76">
            <Button Content="管理者ログイン" Height="24" Command="{Binding ShowLogon2Command}"/>
        </StackPanel>

    </Grid>
</Window>
