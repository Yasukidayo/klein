<Window x:Class="LivetApp1.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:LivetApp1.Views"
        xmlns:vm="clr-namespace:LivetApp1.ViewModels"
        Title="MainWindow" Height="400" Width="525">

    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize2"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

        <!-- MainWindowViewModel からの TransitionMessage("ShowNew") を受け取とってNew画面を表示する処理。 -->
        <l:InteractionMessageTrigger MessageKey="ShowLogon" Messenger="{Binding Messenger}">
            <l:TransitionInteractionMessageAction/>
        </l:InteractionMessageTrigger>
        <!-- MainWindowViewModel からの TransitionMessage("ShowNew") を受け取とって感謝カード作成画面を表示する処理。 -->
        <!-- InvokeActionOnlyWhenWindowIsActive="False" を指定することで、MainWindow が非表示中であってもメッセージを受け取る-->
        <l:InteractionMessageTrigger MessageKey="ShowNew" Messenger="{Binding Messenger}">
            <l:TransitionInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"/>
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger MessageKey="ShowShainList" Messenger="{Binding Messenger}">
            <l:TransitionInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"/>
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger MessageKey="ShowRanking" Messenger="{Binding Messenger}">
            <l:TransitionInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"/>
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger MessageKey="ShowHelp" Messenger="{Binding Messenger}">
            <l:TransitionInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"/>
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger MessageKey="ShowKejiban" Messenger="{Binding Messenger}">
            <l:TransitionInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"/>
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger MessageKey="ShowLogout" Messenger="{Binding Messenger}">
            <l:TransitionInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"/>
        </l:InteractionMessageTrigger>


    </i:Interaction.Triggers>

    <Grid>
        <TextBlock Grid.Column="0"  FontSize="30" VerticalAlignment="Bottom" Background="#AFEEEE" Height="365" Margin="176,0,-30,1" RenderTransformOrigin="0.5,0.5">
            <TextBlock.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform AngleX="14.503"/>
                    <RotateTransform/>
                    <TranslateTransform X="21.242"/>
                </TransformGroup>
            </TextBlock.RenderTransform>
        </TextBlock>

        <TextBlock Grid.Column="0" Text="" FontWeight="Bold" Foreground="White" FontSize="20" Background="#FFB6C1" Grid.RowSpan="4" Margin="-84,-1,283,1" RenderTransformOrigin="0.5,0.5">
            <TextBlock.RenderTransform>

                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform AngleX="14.472"/>
                    <RotateTransform/>
                    <TranslateTransform X="30.742"/>
                </TransformGroup>
            </TextBlock.RenderTransform>
        </TextBlock>

        <TextBlock/>

        <StackPanel>
            <TextBox Text="{Binding MyDate}"/>

            <DockPanel>
                <Menu DockPanel.Dock="Top" Margin="427,0,10,0" RenderTransformOrigin="0.5,0.5">
                    <MenuItem Header="ヘルプ (_H)" Width="80" RenderTransformOrigin="0.94,0.679" Height="20" Command="{Binding ShowHelpCommand}" />
                </Menu>
            </DockPanel>

            <DataGrid ItemsSource="{Binding ToThanksCards}" AutoGenerateColumns="False" CanUserAddRows="False" SelectionChanged="DataGrid_SelectionChanged" Margin="170,25,3,0" >
                <DataGrid.Columns>

                    <DataGridTextColumn Header="From" Binding="{Binding From.Name}" Width="50" >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="タイトル" Binding="{Binding Title}" Width="100" >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="感謝の言葉" Binding="{Binding Body}" Width="300"  >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="作成日時" Binding="{Binding CreatedDateTime}" Width="70">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                </DataGrid.Columns>
            </DataGrid>

            <DataGrid ItemsSource="{Binding FromThanksCards}" AutoGenerateColumns="False" CanUserAddRows="False" SelectionChanged="DataGrid_SelectionChanged" Margin="170,50,0,0" >
                <DataGrid.Columns>
                    <DataGridTextColumn Header="To" Binding="{Binding To.Name}" Width="50" >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="タイトル" Binding="{Binding Title}" Width="100" >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="感謝の言葉" Binding="{Binding Body}" Width="300"  >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="作成日時" Binding="{Binding CreatedDateTime}" Width="70">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                </DataGrid.Columns>
            </DataGrid>


        </StackPanel>
        <StackPanel>

            <WrapPanel Orientation="Vertical" Margin="0,60,365,0">
                <Button Content="社員リスト" Command="{Binding ShainListCommand}" Height="54"/>
                <Button Content="ランキング" Command="{Binding ShowRankingCommand}" Height="54"/>
                <Button Content="掲示板" Command="{Binding ShowKejibanCommand}" Height="53"/>
                <Button Content="感謝カードを作る" Command="{Binding ShowNewCommand}" Width="144" Height="54"/>
                <Button Content="ログアウト" Command="{Binding ShowLogoutCommand}" Width="144" Height="54"/>
            </WrapPanel>



        </StackPanel>

    </Grid>

</Window>
